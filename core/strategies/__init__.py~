"""
Модуль торговых стратегий для AI Trading Assistant

Содержит:
- BaseStrategy - базовый класс для всех стратегий
- Конкретные реализации:
  - SniperStrategy (Снайпер) - скальпинг на малых таймфреймах
  - SmartSniperStrategy (Смарт Снайпер) - анализ по объемам
  - SmartMoneyStrategy (Смарт Мани) - слежка за крупными игроками

Работает через StrategyNames и динамическое создание экземпляров
"""

from .base import BaseStrategy
from .sniper import SniperStrategy
from .smart_sniper import SmartSniperStrategy
from .smart_money import SmartMoneyStrategy
from config.constants import StrategyNames
from utils.logger import TradingLogger
from core.mt5_client import MT5Client
from core.database import MarketDatabase
from typing import Dict, Optional
import pandas as pd
import numpy as np

__all__ = [
    'BaseStrategy',
    'SniperStrategy',
    'SmartSniperStrategy',
    'SmartMoneyStrategy',
    'StrategyNames',
    'STRATEGIES',
    'get_strategy_class',
    'create_strategy'
]

# Регистрация доступных стратегий
STRATEGIES = {
    StrategyNames.SNIPER: SniperStrategy,
    StrategyNames.SMART_SNIPER: SmartSniperStrategy,
    StrategyNames.SMART_MONEY: SmartMoneyStrategy
}

def get_strategy_class(strategy_name: str):
    """
    Возвращает класс стратегии по имени

    :param strategy_name: Одно из StrategyNames
    :return: Класс стратегии
    :raises ValueError: Если стратегия не найдена
    """
    if strategy_name not in STRATEGIES:
        raise ValueError(f"Неизвестная стратегия: {strategy_name}")
    return STRATEGIES[strategy_name]


def create_strategy(
    name: str,
    mt5_client: MT5Client,
    logger: TradingLogger,
    database: Optional[MarketDatabase] = None,
    strategy_config: Optional[Dict] = None
):
    """
    Создаёт экземпляр стратегии с заданными параметрами

    :param name: Название стратегии (например, 'Снайпер')
    :param mt5_client: Клиент MT5
    :param logger: Логгер
    :param database: База данных (опционально)
    :param strategy_config: Конфигурация стратегии (параметры индикаторов и т.д.)
    :return: Экземпляр стратегии
    """
    if strategy_config is None:
        strategy_config = {}

    strategy_class = get_strategy_class(name)

    # Передаем только нужные параметры в конструктор стратегии
    return strategy_class(
        name=name,
        mt5_client=mt5_client,
        logger=logger,
        database=database,
        **strategy_config
    )